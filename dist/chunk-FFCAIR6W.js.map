{"version":3,"sources":["../src/db.ts"],"sourcesContent":["// src/db.ts (Simple in-memory DB for vector store persistence â€“ upgrade to SQLite/Pinecone for prod)\r\nimport { MemoryVectorStore } from \"langchain/vectorstores/memory\";\r\nimport { OpenAIEmbeddings } from \"@langchain/openai\";\r\nimport { Document } from \"@langchain/core/documents\";\r\nimport { OPENAI_API_KEY } from './config.js';\r\n\r\nconst embeddings = new OpenAIEmbeddings({ openAIApiKey: OPENAI_API_KEY });\r\n\r\nlet vectorStore: MemoryVectorStore | null = null;\r\n\r\nexport async function initDB(docs: Document[]) {\r\n  vectorStore = await MemoryVectorStore.fromDocuments(docs, embeddings);\r\n}\r\n\r\nexport async function retrieveFromDB(query: string, k: number = 4) {\r\n  if (!vectorStore) throw new Error('DB not initialized');\r\n  return await vectorStore.similaritySearch(query, k);\r\n}\r\n\r\nexport function getDB() {\r\n  return vectorStore;\r\n}"],"mappings":";;;;;AACA,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AAIjC,IAAM,aAAa,IAAI,iBAAiB,EAAE,cAAc,eAAe,CAAC;AAExE,IAAI,cAAwC;AAE5C,eAAsB,OAAO,MAAkB;AAC7C,gBAAc,MAAM,kBAAkB,cAAc,MAAM,UAAU;AACtE;AAEA,eAAsB,eAAe,OAAe,IAAY,GAAG;AACjE,MAAI,CAAC,YAAa,OAAM,IAAI,MAAM,oBAAoB;AACtD,SAAO,MAAM,YAAY,iBAAiB,OAAO,CAAC;AACpD;AAEO,SAAS,QAAQ;AACtB,SAAO;AACT;","names":[]}