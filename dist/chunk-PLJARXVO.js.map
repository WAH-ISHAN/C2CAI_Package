{"version":3,"sources":["../src/server.ts"],"sourcesContent":["import express from \"express\";\r\nimport OpenAI from \"openai\";\r\nimport { loadConfig, env } from \"./config.js\";\r\nimport { logChat } from \"./db.js\";\r\nimport { answerWithRAG } from \"./rag.js\";\r\nimport crypto from \"crypto\";\r\n\r\nexport function createC2CAIServer() {\r\n  const cfg = loadConfig();\r\n  const client = new OpenAI({ apiKey: env.OPENAI_API_KEY });\r\n  const router = express.Router();\r\n  router.use(express.json({ limit: \"1mb\" }));\r\n\r\n  router.post(\"/chat\", async (req, res) => {\r\n    try {\r\n      const { message, page, sessionId } = req.body;\r\n      const out = await answerWithRAG({\r\n        client,\r\n        model: env.MODEL,\r\n        embedModel: env.EMBED_MODEL,\r\n        question: message,\r\n        pageHint: page,\r\n        allowLangs: cfg.allowLanguages\r\n      });\r\n      await logChat({\r\n        id: sessionId || crypto.randomUUID(),\r\n        ts: Date.now(),\r\n        lang: \"auto\",\r\n        user: message,\r\n        assistant: out.answer,\r\n        sources: out.sources\r\n      });\r\n      res.json(out);\r\n    } catch (e: any) {\r\n      res.status(500).json({ error: e.message || \"server_error\" });\r\n    }\r\n  });\r\n\r\n  return router;\r\n}"],"mappings":";;;;;;;;;;;;AAAA,OAAO,aAAa;AACpB,OAAO,YAAY;AAInB,OAAO,YAAY;AAEZ,SAAS,oBAAoB;AAClC,QAAM,MAAM,WAAW;AACvB,QAAM,SAAS,IAAI,OAAO,EAAE,QAAQ,IAAI,eAAe,CAAC;AACxD,QAAM,SAAS,QAAQ,OAAO;AAC9B,SAAO,IAAI,QAAQ,KAAK,EAAE,OAAO,MAAM,CAAC,CAAC;AAEzC,SAAO,KAAK,SAAS,OAAO,KAAK,QAAQ;AACvC,QAAI;AACF,YAAM,EAAE,SAAS,MAAM,UAAU,IAAI,IAAI;AACzC,YAAM,MAAM,MAAM,cAAc;AAAA,QAC9B;AAAA,QACA,OAAO,IAAI;AAAA,QACX,YAAY,IAAI;AAAA,QAChB,UAAU;AAAA,QACV,UAAU;AAAA,QACV,YAAY,IAAI;AAAA,MAClB,CAAC;AACD,YAAM,QAAQ;AAAA,QACZ,IAAI,aAAa,OAAO,WAAW;AAAA,QACnC,IAAI,KAAK,IAAI;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,WAAW,IAAI;AAAA,QACf,SAAS,IAAI;AAAA,MACf,CAAC;AACD,UAAI,KAAK,GAAG;AAAA,IACd,SAAS,GAAQ;AACf,UAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,eAAe,CAAC;AAAA,IAC7D;AAAA,EACF,CAAC;AAED,SAAO;AACT;","names":[]}