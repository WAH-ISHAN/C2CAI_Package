{"version":3,"sources":["../src/rag.ts"],"sourcesContent":["// src/rag.ts\r\nimport { ChatOpenAI } from \"@langchain/openai\";\r\nimport { ChatPromptTemplate } from \"@langchain/core/prompts\";\r\nimport { retrieveFromDB } from './db.js';\r\nimport { config, OPENAI_API_KEY } from './config.js';\r\n\r\nconst llm = new ChatOpenAI({ \r\n  openAIApiKey: OPENAI_API_KEY,\r\n  modelName: config.openai.model,\r\n  temperature: config.openai.temperature \r\n});\r\n\r\nexport async function generateResponse(query: string, lang: string = 'en') {\r\n  const docs = await retrieveFromDB(query);\r\n  const context = docs.map(doc => doc.pageContent).join('\\n');\r\n  const salesTip = config.sales.recommendPrompt;\r\n  \r\n  const prompt = ChatPromptTemplate.fromMessages([\r\n    ['human', `${config.promptTemplate.replace('{salesTip}', salesTip)} Respond in ${lang}.`]\r\n  ]);\r\n\r\n  const messages = await prompt.formatMessages({ context, question: query });\r\n  const response = await llm.invoke(messages);\r\n  \r\n  // Lead capture if sales-related\r\n  if (config.sales.enableLeadCapture && query.toLowerCase().includes('contact') || query.toLowerCase().includes('buy')) {\r\n    return `${response.content}\\n\\nFor more details, share your email!`;\r\n  }\r\n  \r\n  return response.content;\r\n}"],"mappings":";;;;;;;;;AACA,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AAInC,IAAM,MAAM,IAAI,WAAW;AAAA,EACzB,cAAc;AAAA,EACd,WAAW,OAAO,OAAO;AAAA,EACzB,aAAa,OAAO,OAAO;AAC7B,CAAC;AAED,eAAsB,iBAAiB,OAAe,OAAe,MAAM;AACzE,QAAM,OAAO,MAAM,eAAe,KAAK;AACvC,QAAM,UAAU,KAAK,IAAI,SAAO,IAAI,WAAW,EAAE,KAAK,IAAI;AAC1D,QAAM,WAAW,OAAO,MAAM;AAE9B,QAAM,SAAS,mBAAmB,aAAa;AAAA,IAC7C,CAAC,SAAS,GAAG,OAAO,eAAe,QAAQ,cAAc,QAAQ,CAAC,eAAe,IAAI,GAAG;AAAA,EAC1F,CAAC;AAED,QAAM,WAAW,MAAM,OAAO,eAAe,EAAE,SAAS,UAAU,MAAM,CAAC;AACzE,QAAM,WAAW,MAAM,IAAI,OAAO,QAAQ;AAG1C,MAAI,OAAO,MAAM,qBAAqB,MAAM,YAAY,EAAE,SAAS,SAAS,KAAK,MAAM,YAAY,EAAE,SAAS,KAAK,GAAG;AACpH,WAAO,GAAG,SAAS,OAAO;AAAA;AAAA;AAAA,EAC5B;AAEA,SAAO,SAAS;AAClB;","names":[]}