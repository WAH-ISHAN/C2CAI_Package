{"version":3,"sources":["../src/crawler.ts"],"sourcesContent":["import * as cheerio from \"cheerio\";\r\nimport { URL } from \"url\";\r\n\r\ntype Page = { url: string; title: string; text: string };\r\n\r\nexport async function crawlSite(baseUrl: string, maxPages=50, sameDomainOnly=true): Promise<Page[]> {\r\n  const start = new URL(baseUrl);\r\n  const q: string[] = [start.href];\r\n  const seen = new Set<string>();\r\n  const pages: Page[] = [];\r\n\r\n  while (q.length && pages.length < maxPages) {\r\n    const u = q.shift()!;\r\n    if (seen.has(u)) continue;\r\n    seen.add(u);\r\n    try {\r\n      const res = await fetch(u, { headers: { \"User-Agent\": \"C2CAI/0.1\" } });\r\n      if (!res.ok || !res.headers.get(\"content-type\")?.includes(\"text/html\")) continue;\r\n      const html = await res.text();\r\n      const $ = cheerio.load(html);\r\n      $(\"script,style,noscript\").remove();\r\n      const title = $(\"title\").text() || u;\r\n      const main = $(\"main\").text() || $(\"body\").text();\r\n      const text = main.replace(/\\s+/g, \" \").trim();\r\n      pages.push({ url: u, title, text });\r\n\r\n      const domain = start.hostname;\r\n      $(\"a[href]\").each((_, el) => {\r\n        const href = $(el).attr(\"href\");\r\n        if (!href) return;\r\n        try {\r\n          const nu = new URL(href, u);\r\n          if (sameDomainOnly && nu.hostname !== domain) return;\r\n          if (nu.protocol.startsWith(\"http\")) q.push(nu.href.split(\"#\")[0]);\r\n        } catch {}\r\n      });\r\n    } catch {}\r\n  }\r\n  return pages;\r\n}"],"mappings":";AAAA,YAAY,aAAa;AACzB,SAAS,WAAW;AAIpB,eAAsB,UAAU,SAAiB,WAAS,IAAI,iBAAe,MAAuB;AAClG,QAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,QAAM,IAAc,CAAC,MAAM,IAAI;AAC/B,QAAM,OAAO,oBAAI,IAAY;AAC7B,QAAM,QAAgB,CAAC;AAEvB,SAAO,EAAE,UAAU,MAAM,SAAS,UAAU;AAC1C,UAAM,IAAI,EAAE,MAAM;AAClB,QAAI,KAAK,IAAI,CAAC,EAAG;AACjB,SAAK,IAAI,CAAC;AACV,QAAI;AACF,YAAM,MAAM,MAAM,MAAM,GAAG,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,CAAC;AACrE,UAAI,CAAC,IAAI,MAAM,CAAC,IAAI,QAAQ,IAAI,cAAc,GAAG,SAAS,WAAW,EAAG;AACxE,YAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,YAAM,IAAY,aAAK,IAAI;AAC3B,QAAE,uBAAuB,EAAE,OAAO;AAClC,YAAM,QAAQ,EAAE,OAAO,EAAE,KAAK,KAAK;AACnC,YAAM,OAAO,EAAE,MAAM,EAAE,KAAK,KAAK,EAAE,MAAM,EAAE,KAAK;AAChD,YAAM,OAAO,KAAK,QAAQ,QAAQ,GAAG,EAAE,KAAK;AAC5C,YAAM,KAAK,EAAE,KAAK,GAAG,OAAO,KAAK,CAAC;AAElC,YAAM,SAAS,MAAM;AACrB,QAAE,SAAS,EAAE,KAAK,CAAC,GAAG,OAAO;AAC3B,cAAM,OAAO,EAAE,EAAE,EAAE,KAAK,MAAM;AAC9B,YAAI,CAAC,KAAM;AACX,YAAI;AACF,gBAAM,KAAK,IAAI,IAAI,MAAM,CAAC;AAC1B,cAAI,kBAAkB,GAAG,aAAa,OAAQ;AAC9C,cAAI,GAAG,SAAS,WAAW,MAAM,EAAG,GAAE,KAAK,GAAG,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,QAClE,QAAQ;AAAA,QAAC;AAAA,MACX,CAAC;AAAA,IACH,QAAQ;AAAA,IAAC;AAAA,EACX;AACA,SAAO;AACT;","names":[]}